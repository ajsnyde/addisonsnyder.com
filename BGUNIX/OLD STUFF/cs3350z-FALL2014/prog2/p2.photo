Script started on Thu Sep 25 18:27:01 2014
sh: error importing function definition for `g++'
sh-4.3$ cat todo.h
///////////////////////////////////////////////////////////////
// FILE NAME:           todo.h
// TITLE:               To-Do Header File
// PROGRAMMER:          Addison Snyder
// FOR COURSE:          CS 3350
// DUE DATE:            9/22/2014
//
// ALL CODE IS MINE UNLESS OTHERWISE NOTED
///////////////////////////////////////////////////////////////

#pragma once
#include "string"

using namespace std;

class todo {
        public:
        todo(); // constructor!
        todo(int, string);//overloaded constructor
        void display();//all member functions (getters, setters, displayers..)
        int get_id();   //ID IS NOT USED YET, BUT IS PROVIDED FOR FUTURE USE
        int get_priority();
        string get_info();
        void set_id(int);
        void set_priority(int);
        void set_info(string);

        private://private variables
        int id;
        int priority;
        string info;
};
sh-4.3$ cat todo.cpp
#include "todo.h"
#include "iostream"
#include "vector"

using namespace std;

todo::todo(void)        //DEFAULT CONSTRUCTOR
{
        set_id(-1);
        set_priority(-1);
        set_info("uninitialized");
}

todo::todo(int a, string b)     //OVERLOADED CONSTRUCTOR
{
        set_id(-1);
        set_priority(a);
        set_info(b);
}

int todo::get_id()      //BASIC GETTERS AND SETTERS
{
        return id;
}

int todo::get_priority()
{
        return priority;
}

string todo::get_info()
{
        return info;
}

void todo::set_id(int new_id)
{
        id = new_id;
}

void todo::set_priority(int new_priority)
{
        priority = new_priority;
}

void todo::set_info(string new_info)
{
        info = new_info;
}

void todo::display()    //DISPLAYS PROPERTIES
{
        cout << info << " - Priority: " << priority << "\n";
}
sh-4.3$ cat prog2.cpp
#include "iostream"
#include "string"
#include "vector"
#include "todo.h"

using namespace std;

void add(todo, vector<todo>&);
void del(int, vector<todo>&);
void disp(vector<todo>&);

int main()
{
        char choice = '0';      //SEED CHOICE
        string info;
        int priority;
        vector<todo> list;

        cout << "Welcome to the To-Do List Program!\n";

        while(choice != 'X')    //MENU SYSTEM
        {
                cout << "   A = ADD ITEM\n   D = DELETE ITEM\n   P = PRINT ITEMS\n   X = EXIT\n   INPUT: ";
                cin >> choice;
                switch (choice)
                {
                case 'A':       //ADD
                        cout << "Please enter priority number: ";
                        cin >> priority;
                        cin.ignore();
                        cout << "Please enter description: ";
                        getline(cin, info);     //GETLINE ALLOWS SPACE CHARS IN STRING
                        add(todo(priority, info), list);
                        cout << "Item has been added!\n";
                        break;
                case 'D':       //DELETE
                        cout << "Please enter priority number of item to be deleted: ";
                        cin >> priority;
                        del(priority, list);
                        cout << "Done!\n";
                        break;
                case 'P':       //PRINT
                        cout << "Displaying To-Do list:\n~~~~~~~~~~~~~~~~~~~~~~~~~~\n";
                        disp(list);
                        break;
                case 'X':       //EXIT
                        cout << "Exiting. . .\n";
                        break;
                default:
                        cout << "Please enter a valid option!\n";
                }
        }
        return 0;
}

/* ALTERNATIVE ADD FUNCTION - COPIES VECTOR AND ADDS ONE EXTRA ELEMENT TO ITS CORRESPONDING SPOT
void add(todo in, vector<todo> &out)
{
        vector<todo> temp_list;
        int i;
        int priority = in.get_priority();

        for(i = 0; i < out.size(); i++)
        {
                if(out[i].get_priority() < priority)
                        temp_list.push_back(out[i]);
                else
                {
                        temp_list.push_back(in);
                        temp_list.push_back(out[i]);
                }
        }
        if(temp_list.size() == out.size())
                temp_list.push_back(in);
        out = temp_list;
}
*/

void add(todo in, vector<todo> &out)    //INSERTS ITEM IN ITS CORRECT ORDER
{
        vector<todo>::iterator it;
        unsigned int i = 0;
        int priority = in.get_priority();

        for(it = out.begin(); it != out.end(); it++, i++)       //INSERTS USING INSERT FUNCTION
        {
                if(out[i].get_priority() >= priority)
                        break;
        }
        out.insert(out.begin() + i, in);
        return;
}

void del(int rank, vector<todo> &out)   //DELETES THE FIRST ITEM WITH THE PASSED PRIORITY NUMBER
{
        vector<todo> temp_list;
        unsigned int i; //UNSIGNED TO STOP THOSE ANNOYING WARNINGS FROM COMPILER
        bool del = false;

        for(i = 0; i < out.size(); i++)
        {
                if(out[i].get_priority() == rank && !del)       //ENSURES THAT ONLY ONE ITEM IS DELETED USING del bool
                        del = true;
                else
                {
                        temp_list.push_back(out[i]);
                }
        }
        out = temp_list;
}

void disp(vector<todo> &out)    //DISPLAYS ALL todos IN THE PASSED VECTOR
{
        for(unsigned int i = 0; i < out.size(); i++)
                out[i].display();
}
sh-4.3$ clear
[H[2Jsh-4.3$ gclearat prog2.cpp[1Ptodo.cpp[2Phsh-4.3$ g++ prog2.cpp todo.cpp
sh-4.3$ a.out
Welcome to the To-Do List Program!
   A = ADD ITEM
   D = DELETE ITEM
   P = PRINT ITEMS
   X = EXIT
   INPUT: A
Please enter priority number: 1
Please enter description: Go Shopping
Item has been added!
   A = ADD ITEM
   D = DELETE ITEM
   P = PRINT ITEMS
   X = EXIT
   INPUT: A
Please enter priority number: 1
Please enter description: Eat Lunch
Item has been added!
   A = ADD ITEM
   D = DELETE ITEM
   P = PRINT ITEMS
   X = EXIT
   INPUT: Add  
Please enter priority number: 3
Please enter description: Sleep
Item has been added!
   A = ADD ITEM
   D = DELETE ITEM
   P = PRINT ITEMS
   X = EXIT
   INPUT: A
Please enter priority number: 1
Please enter description: Sharpen Pencils
Item has been added!
   A = ADD ITEM
   D = DELETE ITEM
   P = PRINT ITEMS
   X = EXIT
   INPUT: A
Please enter priority number: 2
Please enter description: Buy Books
Item has been added!
   A = ADD ITEM
   D = DELETE ITEM
   P = PRINT ITEMS
   X = EXIT
   INPUT: A
Please enter priority number: 4
Please enter description: Work Our   out
Item has been added!
   A = ADD ITEM
   D = DELETE ITEM
   P = PRINT ITEMS
   X = EXIT
   INPUT: P
Displaying To-Do list:
~~~~~~~~~~~~~~~~~~~~~~~~~~
Sharpen Pencils - Priority: 1
Eat Lunch - Priority: 1
Go Shopping - Priority: 1
Buy Books - Priority: 2
Sleep - Priority: 3
Work out - Priority: 4
   A = ADD ITEM
   D = DELETE ITEM
   P = PRINT ITEMS
   X = EXIT
   INPUT: A
Please enter priority number: 3
Please enter description: Call Mom
Item has been added!
   A = ADD ITEM
   D = DELETE ITEM
   P = PRINT ITEMS
   X = EXIT
   INPUT: A
Please enter priority number: 2
Please enter description: Walk the dog
Item has been added!
   A = ADD ITEM
   D = DELETE ITEM
   P = PRINT ITEMS
   X = EXIT
   INPUT: D
Please enter priority number of item to be deleted: 1
Done!
   A = ADD ITEM
   D = DELETE ITEM
   P = PRINT ITEMS
   X = EXIT
   INPUT: A
Please enter priority number: 1
Please enter description: Pq ay bills
Item has been added!
   A = ADD ITEM
   D = DELETE ITEM
   P = PRINT ITEMS
   X = EXIT
   INPUT: D
Please enter priority number of item to be deleted: 4
Done!
   A = ADD ITEM
   D = DELETE ITEM
   P = PRINT ITEMS
   X = EXIT
   INPUT: P
Displaying To-Do list:
~~~~~~~~~~~~~~~~~~~~~~~~~~
Pay bills - Priority: 1
Eat Lunch - Priority: 1
Go Shopping - Priority: 1
Walk the dog - Priority: 2
Buy Books - Priority: 2
Call Mom - Priority: 3
Sleep - Priority: 3
   A = ADD ITEM
   D = DELETE ITEM
   P = PRINT ITEMS
   X = EXIT
   INPUT: X
Exiting. . .
sh-4.3$ exit

script done on Thu Sep 25 18:30:25 2014
