Script started on Sun Nov 30 16:30:26 2014
sh-4.3$ g++ timex.cpp mystSort.osh-4.3$ [11Pcat timex.cppsh-4.3$ g++ timex.cpp mystSort.osh-4.3$ [16Phhahahah[ $[ $RANDOM % 6 ] == 0 ] && echo Boom || echo Click
Click
sh-4.3$ [ $[ $RANDOM % 6 ] == 0 ] && echo Boom || echo Click
Boom
sh-4.3$ [ $[ $RANDOM % 6 ] == 0 ] && echo Boom || echo Clicksh-4.3$ [28Pg++ timex.cpp mystSort.o
sh-4.3$ g++ timex.cpp mystSort.osh-4.3$ [ $[ $RANDOM % 6 ] == 0 ] && echo Boom || echo Clicksh-4.3$ [28Pg++ timex.cpp mystSort.osh-4.3$ [11Pcat timex.cpp
// File timex.cpp version of November 2014.
// Based on code and comments written by Walter Maner unless credited otheriwse.
#include <iostream>
#include <iomanip>
#include <math.h>
#include "Timer.h"
#include "vector"
#include <stdlib.h>
#include <time.h>
#include <algorithm>

double doNothing( double &arg )
{
        return arg;
}

void mystSort1( vector<string> & );
void mystSort2( vector<string> & );
string create_string();
vector<string> create_vector(int);
void display_vector(vector<string> &, int);

int main()
{
        Timer aTimer1, aTimer2, aTimer3, aTimer4;
        double junk;
        int n = 10000;
        const long int REPS = 10;  // Determined by trial and error
        Timer timer1[REPS], timer2[REPS], timer3[REPS], timer4[REPS], control1[REPS], control2[REPS], control3[REPS], control4[REPS];
        srand (time(NULL));
        vector<string> master = create_vector(n);

        for(n = 5000; n <= 40000; n*=2)
        {
                cout << "Starting Control 1. . .\n";
                cout << "REP #\tN\tTIME\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n";
                for(int i = 0; i < REPS; i++)
                {
                        control1[i].start();
                        junk = doNothing( junk );
                        master = create_vector(n);
                        control1[i].stop();
                        cout << i << "\t" << n << "\t" << fixed << setprecision( 11 ) << control1[i].getElapsedTime() << "\n";
                }
                cout << "Starting Experiment 1 (mystSort1). . .\n";
                cout << "REP #\tN\tTIME\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n";
                for(int i = 0; i < REPS; i++)
                {
                        timer1[i].start();
                        mystSort1(master);
                        master = create_vector(n);
                        timer1[i].stop();
                        cout << i << "\t" << n << "\t" << fixed << setprecision( 11 ) << timer1[i].getElapsedTime() << "\n";
                }
                cout << "Starting Control 2. . .\n";
                cout << "REP #\tN\tTIME\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n";
                for(int i = 0; i < REPS; i++)
                {
                        control2[i].start();
                        junk = doNothing( junk );
                        master = create_vector(n);
                        control2[i].stop();
                        cout << i << "\t" << n << "\t" << fixed << setprecision( 11 ) << control2[i].getElapsedTime() << "\n";
                }
                cout << "Starting Experiment 2 (mystSort2). . .\n";
                cout << "REP #\tN\tTIME\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n";
                for(int i = 0; i < REPS; i++)
                {
                        timer2[i].start();
                        mystSort2(master);
                        master = create_vector(n);
                        timer2[i].stop();
                        cout << i << "\t" << n << "\t" << fixed << setprecision( 11 ) << timer2[i].getElapsedTime() << "\n";
                }
                cout << "Starting Control 3. . .\n";
                cout << "REP #\tN\tTIME\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n";
                for(int i = 0; i < REPS; i++)
                {
                        control3[i].start();
                        junk = doNothing( junk );
                        master = create_vector(n);
                        control3[i].stop();
                        cout << i << "\t" << n << "\t" << fixed << setprecision( 11 ) << control3[i].getElapsedTime() << "\n";
                }
                cout << "Starting Experiment 3 (list sort). . .\n";
                cout << "REP #\tN\tTIME\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n";
                for(int i = 0; i < REPS; i++)
                {
                        timer3[i].start();
                        std::sort (master.begin(), master.begin());
                        master = create_vector(n);
                        timer3[i].stop();
                        cout << i << "\t" << n << "\t" << fixed << setprecision( 11 ) << timer3[i].getElapsedTime() << "\n";
                }
                cout << "Starting Control 4. . .\n";
                cout << "REP #\tN\tTIME\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n";
                for(int i = 0; i < REPS; i++)
                {
                        control4[i].start();
                        junk = doNothing( junk );
                        master = create_vector(n);
                        control4[i].stop();
                        cout << i << "\t" << n << "\t" << fixed << setprecision( 11 ) << control4[i].getElapsedTime() << "\n";
                }
                cout << "Starting Experiment 4 (stable). . .\n";
                cout << "REP #\tN\tTIME\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n";
                for(int i = 0; i < REPS; i++)
                {
                        timer4[i].start();
                        stable_sort(master.begin(), master.end());
                        master = create_vector(n);
                        timer4[i].stop();
                        cout << i << "\t" << n << "\t" << fixed << setprecision( 11 ) << timer4[i].getElapsedTime() << "\n";
                }
        cout << "\n\nINCREASING N TO " << (n*2) << ". . .\n\n";
        }
        return 0;
}

string create_string()
{
        string str = "default!";
        for(int i = 0; i<8; i++)
        {
                str[i] = rand() % 26 + 65;
        }
        str[8] = 0;
        //cout << str << endl;
        return str;
}

vector<string> create_vector(int ELEMENTS)
{
        vector<string> vect;
        for(int i = 0; i<ELEMENTS; i++)
                vect.push_back(create_string());
        return vect;
}

void display_vector(vector<string> & vect, int ELEMENTS)
{
        for(int i = 0; i<ELEMENTS; i++)
                cout << vect[i] << endl;
        return;
}
sh-4.3$ cat timex.cppsh-4.3$ g++ timex.cpp mystSort.o
sh-4.3$ g++ timex.cpp mystSort.osh-4.3$ [11Pcat timex.cppsh-4.3$ g++ timex.cpp mystSort.osh-4.3$ [ $[ $RANDOM % 6 ] == 0 ] && echo Boom || echo Clicksh-4.3$ [28Pg++ timex.cpp mystSort.osh-4.3$ [11Pcat timex.cppsh-4.3$ g++ timex.cpp mystSort.osh-4.3$ [16Phhahahah[ $[ $RANDOM % 6 ] == 0 ] && echo Boom || echo Clicksh-4.3$ hhahahah[Kg++ timex.cpp mystSort.osh-4.3$ [16Phhahahah        a.out
Starting Control 1. . .
REP #   N       TIME
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
0       5000    0.02000000000
1       5000    0.01000000000
2       5000    0.02000000000
3       5000    0.01000000000
4       5000    0.02000000000
5       5000    0.01000000000
6       5000    0.02000000000
7       5000    0.01000000000
8       5000    0.02000000000
9       5000    0.01000000000
Starting Experiment 1 (mystSort1). . .
REP #   N       TIME
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
0       5000    0.10000000000
1       5000    0.09000000000
2       5000    0.09000000000
3       5000    0.09000000000
4       5000    0.09000000000
5       5000    0.09000000000
6       5000    0.09000000000
7       5000    0.10000000000
8       5000    0.09000000000
9       5000    0.09000000000
Starting Control 2. . .
REP #   N       TIME
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
0       5000    0.02000000000
1       5000    0.01000000000
2       5000    0.01000000000
3       5000    0.02000000000
4       5000    0.01000000000
5       5000    0.02000000000
6       5000    0.01000000000
7       5000    0.02000000000
8       5000    0.01000000000
9       5000    0.02000000000
Starting Experiment 2 (mystSort2). . .
REP #   N       TIME
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
0       5000    3.14000000000
1       5000    3.16000000000
2       5000    3.17000000000
3       5000    3.16000000000
4       5000    3.16000000000
5       5000    3.15000000000
6       5000    3.15000000000
7       5000    3.16000000000
8       5000    3.16000000000
9       5000    3.16000000000
Starting Control 3. . .
REP #   N       TIME
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
0       5000    0.02000000000
1       5000    0.01000000000
2       5000    0.02000000000
3       5000    0.01000000000
4       5000    0.02000000000
5       5000    0.01000000000
6       5000    0.02000000000
7       5000    0.02000000000
8       5000    0.01000000000
9       5000    0.02000000000
Starting Experiment 3 (list sort). . .
REP #   N       TIME
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
0       5000    0.01000000000
1       5000    0.01000000000
2       5000    0.02000000000
3       5000    0.02000000000
4       5000    0.01000000000
5       5000    0.02000000000
6       5000    0.01000000000
7       5000    0.02000000000
8       5000    0.01000000000
9       5000    0.02000000000
Starting Control 4. . .
REP #   N       TIME
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
0       5000    0.01000000000
1       5000    0.02000000000
2       5000    0.01000000000
3       5000    0.02000000000
4       5000    0.01000000000
5       5000    0.02000000000
6       5000    0.01000000000
7       5000    0.02000000000
8       5000    0.01000000000
9       5000    0.02000000000
Starting Experiment 4 (stable). . .
REP #   N       TIME
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
0       5000    0.03000000000
1       5000    0.03000000000
2       5000    0.04000000000
3       5000    0.03000000000
4       5000    0.03000000000
5       5000    0.04000000000
6       5000    0.04000000000
7       5000    0.03000000000
8       5000    0.03000000000
9       5000    0.03000000000


INCREASING N TO 10000. . .

Starting Control 1. . .
REP #   N       TIME
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
0       10000   0.04000000000
1       10000   0.03000000000
2       10000   0.04000000000
3       10000   0.03000000000
4       10000   0.03000000000
5       10000   0.04000000000
6       10000   0.04000000000
7       10000   0.03000000000
8       10000   0.04000000000
9       10000   0.04000000000
Starting Experiment 1 (mystSort1). . .
REP #   N       TIME
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
0       10000   0.20000000000
1       10000   0.21000000000
2       10000   0.21000000000
3       10000   0.20000000000
4       10000   0.20000000000
5       10000   0.21000000000
6       10000   0.20000000000
7       10000   0.20000000000
8       10000   0.20000000000
9       10000   0.21000000000
Starting Control 2. . .
REP #   N       TIME
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
0       10000   0.03000000000
1       10000   0.04000000000
2       10000   0.03000000000
3       10000   0.04000000000
4       10000   0.03000000000
5       10000   0.04000000000
6       10000   0.03000000000
7       10000   0.03000000000
8       10000   0.04000000000
9       10000   0.03000000000
Starting Experiment 2 (mystSort2). . .
REP #   N       TIME
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
0       10000   12.77000000000
1       10000   12.72000000000
2       10000   12.80000000000
3       10000   12.73000000000
4       10000   12.81000000000
5       10000   12.75000000000
6       10000   12.80000000000
7       10000   12.73000000000
8       10000   12.81000000000
9       10000   12.82000000000
Starting Control 3. . .
REP #   N       TIME
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
0       10000   0.03000000000
1       10000   0.04000000000
2       10000   0.03000000000
3       10000   0.03000000000
4       10000   0.04000000000
5       10000   0.03000000000
6       10000   0.04000000000
7       10000   0.03000000000
8       10000   0.04000000000
9       10000   0.03000000000
Starting Experiment 3 (list sort). . .
REP #   N       TIME
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
0       10000   0.04000000000
1       10000   0.03000000000
2       10000   0.04000000000
3       10000   0.03000000000
4       10000   0.04000000000
5       10000   0.03000000000
6       10000   0.03000000000
7       10000   0.04000000000
8       10000   0.03000000000
9       10000   0.04000000000
Starting Control 4. . .
REP #   N       TIME
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
0       10000   0.03000000000
1       10000   0.03000000000
2       10000   0.04000000000
3       10000   0.04000000000
4       10000   0.03000000000
5       10000   0.04000000000
6       10000   0.03000000000
7       10000   0.04000000000
8       10000   0.03000000000
9       10000   0.04000000000
Starting Experiment 4 (stable). . .
REP #   N       TIME
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
0       10000   0.08000000000
1       10000   0.07000000000
2       10000   0.08000000000
3       10000   0.07000000000
4       10000   0.08000000000
5       10000   0.07000000000
6       10000   0.08000000000
7       10000   0.07000000000
8       10000   0.08000000000
9       10000   0.07000000000


INCREASING N TO 20000. . .

Starting Control 1. . .
REP #   N       TIME
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
0       20000   0.07000000000
1       20000   0.08000000000
2       20000   0.07000000000
3       20000   0.08000000000
4       20000   0.07000000000
5       20000   0.08000000000
6       20000   0.08000000000
7       20000   0.07000000000
8       20000   0.08000000000
9       20000   0.08000000000
Starting Experiment 1 (mystSort1). . .
REP #   N       TIME
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
0       20000   0.45000000000
1       20000   0.45000000000
2       20000   0.45000000000
3       20000   0.44000000000
4       20000   0.45000000000
5       20000   0.44000000000
6       20000   0.44000000000
7       20000   0.44000000000
8       20000   0.46000000000
9       20000   0.44000000000
Starting Control 2. . .
REP #   N       TIME
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
0       20000   0.08000000000
1       20000   0.08000000000
2       20000   0.08000000000
3       20000   0.08000000000
4       20000   0.07000000000
5       20000   0.08000000000
6       20000   0.07000000000
7       20000   0.08000000000
8       20000   0.07000000000
9       20000   0.08000000000
Starting Experiment 2 (mystSort2). . .
REP #   N       TIME
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
0       20000   61.95000000000
1       20000   61.78000000000
2       20000   62.15000000000
3       20000   61.72000000000
4       20000   62.05000000000
5       20000   61.51000000000
6       20000   61.53000000000
7       20000   61.61000000000
8       20000   61.96000000000
9       20000   61.61000000000
Starting Control 3. . .
REP #   N       TIME
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
0       20000   0.08000000000
1       20000   0.07000000000
2       20000   0.08000000000
3       20000   0.09000000000
4       20000   0.07000000000
5       20000   0.08000000000
6       20000   0.07000000000
7       20000   0.09000000000
8       20000   0.07000000000
9       20000   0.08000000000
Starting Experiment 3 (list sort). . .
REP #   N       TIME
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
0       20000   0.08000000000
1       20000   0.08000000000
2       20000   0.08000000000
3       20000   0.07000000000
4       20000   0.08000000000
5       20000   0.08000000000
6       20000   0.08000000000
7       20000   0.07000000000
8       20000   0.08000000000
9       20000   0.08000000000
Starting Control 4. . .
REP #   N       TIME
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
0       20000   0.08000000000
1       20000   0.07000000000
2       20000   0.08000000000
3       20000   0.08000000000
4       20000   0.08000000000
5       20000   0.07000000000
6       20000   0.08000000000
7       20000   0.07000000000
8       20000   0.08000000000
9       20000   0.08000000000
Starting Experiment 4 (stable). . .
REP #   N       TIME
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
0       20000   0.18000000000
1       20000   0.18000000000
2       20000   0.19000000000
3       20000   0.20000000000
4       20000   0.19000000000
5       20000   0.19000000000
6       20000   0.20000000000
7       20000   0.19000000000
8       20000   0.19000000000
9       20000   0.18000000000


INCREASING N TO 40000. . .

Starting Control 1. . .
REP #   N       TIME
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
0       40000   0.16000000000
1       40000   0.16000000000
2       40000   0.16000000000
3       40000   0.15000000000
4       40000   0.15000000000
5       40000   0.15000000000
6       40000   0.15000000000
7       40000   0.16000000000
8       40000   0.16000000000
9       40000   0.16000000000
Starting Experiment 1 (mystSort1). . .
REP #   N       TIME
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
0       40000   0.94000000000
1       40000   0.96000000000
2       40000   0.95000000000
3       40000   0.94000000000
4       40000   0.99000000000
5       40000   0.97000000000
6       40000   1.00000000000
7       40000   0.96000000000
8       40000   0.98000000000
9       40000   0.98000000000
Starting Control 2. . .
REP #   N       TIME
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
0       40000   0.18000000000
1       40000   0.18000000000
2       40000   0.17000000000
3       40000   0.17000000000
4       40000   0.16000000000
5       40000   0.17000000000
6       40000   0.17000000000
7       40000   0.17000000000
8       40000   0.17000000000
9       40000   0.16000000000
Starting Experiment 2 (mystSort2). . .
REP #   N       TIME
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
0       40000   320.24000000000
1       40000   318.65000000000
2       40000   320.86000000000
3       40000   323.44000000000
4       40000   323.28000000000
5       40000   321.71000000000
6       40000   317.38000000000
7       40000   318.72000000000
8       40000   321.96000000000
9       40000   320.20000000000
Starting Control 3. . .
REP #   N       TIME
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
0       40000   0.18000000000
1       40000   0.18000000000
2       40000   0.18000000000
3       40000   0.19000000000
4       40000   0.17000000000
5       40000   0.16000000000
6       40000   0.17000000000
7       40000   0.16000000000
8       40000   0.17000000000
9       40000   0.18000000000
Starting Experiment 3 (list sort). . .
REP #   N       TIME
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
0       40000   0.19000000000
1       40000   0.19000000000
2       40000   0.18000000000
3       40000   0.17000000000
4       40000   0.17000000000
5       40000   0.16000000000
6       40000   0.17000000000
7       40000   0.16000000000
8       40000   0.16000000000
9       40000   0.16000000000
Starting Control 4. . .
REP #   N       TIME
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
0       40000   0.16000000000
1       40000   0.16000000000
2       40000   0.16000000000
3       40000   0.16000000000
4       40000   0.16000000000
5       40000   0.16000000000
6       40000   0.17000000000
7       40000   0.18000000000
8       40000   0.18000000000
9       40000   0.19000000000
Starting Experiment 4 (stable). . .
REP #   N       TIME
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
0       40000   0.52000000000
1       40000   0.53000000000
2       40000   0.51000000000
3       40000   0.50000000000
4       40000   0.50000000000
5       40000   0.47000000000
6       40000   0.47000000000
7       40000   0.47000000000
8       40000   0.49000000000
9       40000   0.50000000000


INCREASING N TO 80000. . .

sh-4.3$ wooop  ps
sh: woops: command not found
sh-4.3$ forgot to           exit

script done on Sun Nov 30 18:38:08 2014
