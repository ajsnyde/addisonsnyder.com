Script started on Mon Apr 21 22:30:22 2014
sh-3.00$ pwd
/home/15/ajsnyde/cs2020rh/final
sh-3.00$ ls -l
total 46
-rw-r--r--   1 ajsnyde  ics2020rh    3001 Apr 21 22:27 Car.cpp
-rw-r--r--   1 ajsnyde  ics2020rh     821 Apr 21 22:27 Car.h
-rw-r--r--   1 ajsnyde  ics2020rh    1349 Apr 21 22:28 CarDriver.cpp
-rwxr-xr-x   1 ajsnyde  ics2020rh   16392 Apr 21 22:29 a.out
-rw-r--r--   1 ajsnyde  user           0 Apr 21 22:30 driver.photo
sh-3.00$ cat Car.cpp
#include "iostream"
#include "Car.h"
#include "string"

using namespace std;

///////////////////////////////////////////////////////////////
//      Constructor - Sets values to a default.. (no return, no parameters)
///////////////////////////////////////////////////////////////
Car::Car()
{
        cout << "Creating a DEFAULT vehicle\n";
        delivery = 0;
        year = 2007;
        value = 9200;
        gascap = 9.2;
}

Car::Car(string test)
{
        cout << test;
}

///////////////////////////////////////////////////////////////
//      Function Name - Display
//      No parameters, void return.
///////////////////////////////////////////////////////////////

void Car::display() const
{
        cout << "Displaying all vehicle attributes:\n";
        cout << "----------------------------------------\n";
        cout << "Delivery? (1 = yes, 0 = no) - " << delivery << "\n";
        cout << "Year                        - " << year << "\n";
        cout << "Value (in USD)              - " << value << "\n";
        cout << "Gas Tank Capacity           - " << gascap << "\n";
        cout << "----------------------------------------\n";
}

///////////////////////////////////////////////////////////////
//      Function Name - Returns Gas tank cap
//      No parameters, double return.
///////////////////////////////////////////////////////////////

double Car::getgascap() const
{
        return gascap;
}

///////////////////////////////////////////////////////////////
//      Function Name - Sets gas
//      Gas parameter, no return.
///////////////////////////////////////////////////////////////

void Car::setgascap(double g)
{
        gascap = g;
}

///////////////////////////////////////////////////////////////
//      Function Name - Returns value of stored car
//      No parameters, int return.
///////////////////////////////////////////////////////////////

int Car::getvalue() const
{
        return value;
}

///////////////////////////////////////////////////////////////
//      Function Name - sets value
//      Value is parameter, no return.
///////////////////////////////////////////////////////////////

void Car::setvalue(int v)
{
        value = v;
}

///////////////////////////////////////////////////////////////
//      Function Name - Returns Year
//      No parameters, int return.
///////////////////////////////////////////////////////////////

int Car::getyear() const
{
        return year;
}

///////////////////////////////////////////////////////////////
//      Function Name - sets year
//      year (int) parameter, no return.
///////////////////////////////////////////////////////////////

void Car::setyear(int y)
{
        year = y;
}

///////////////////////////////////////////////////////////////
//      Function Name - Returns delivery bool
//      No parameters, Bool return.
///////////////////////////////////////////////////////////////

bool Car::getdelivery() const
{
        return delivery;
}

///////////////////////////////////////////////////////////////
//      Function Name - Sets delivery status
//      bool parameter, no return.
///////////////////////////////////////////////////////////////

void Car::setdelivery(bool d)
{
        delivery = d;
}sh-3.00$ cat CarDriver.cpp
///////////////////////////////////////////////////////////////
// FILE NAME:           driver.cpp         
// TITLE:               Test driver for 'car' class
// PROGRAMMER:          Addison Snyder
// FOR COURSE:          CS 2020
// DUE DATE:            4/21/2014
//
// ALL CODE IS MINE UNLESS OTHERWISE NOTED
///////////////////////////////////////////////////////////////

#include "iostream"
#include "Car.h"

using namespace std;

int main()
{

        //declaring all variables
        Car Taxi;
        Car newcar("Overloaded constructor works!\n");//overloaded constructor
        int y;
        int v;
        double g;
        bool d;
        int new_value;

        //displays all values (specifically, one that were initialized in constructor)
        Taxi.display();
        //testing all member functions..
        cout << "Enter new year: ";
        cin >> y;
        Taxi.setyear(y);
        cout << "Enter new value: ";
        cin >> v;
        Taxi.setvalue(v);
        cout << "Enter new gas cap: ";
        cin >> g;
        Taxi.setgascap(g);
        cout << "Delivery? (1 = yes, 0 = no): ";
        cin >> d;
        Taxi.setdelivery(d);
        cout << "Displaying new set of data:\n";
        Taxi.display();

        cout << "Getting data from class. . .\n";//testing one of the four functions that GET data.
        new_value = Taxi.getvalue();//returns data from class
        if(new_value == Taxi.getvalue())//verifies that data is legit
                cout << "Values match! Successful Operation!\n";
        else
                cout << "Something went wrong!\n";
        return 0;
}

sh-3.00$ cat Car.h
///////////////////////////////////////////////////////////////
// FILE NAME:           Car.h
// TITLE:                       Car Header File
// PROGRAMMER:          Addison Snyder
// FOR COURSE:          CS 2020
// DUE DATE:            4/21/2014
//
// ALL CODE IS MINE UNLESS OTHERWISE NOTED
///////////////////////////////////////////////////////////////

#ifndef CAR_H
#define CAR_H
#include "string"

using namespace std;

class Car {
        private://variables
        bool delivery;
        int year;
        int value;
        double gascap;

        public:
        Car(); // constructor!
        Car(string);//overloaded constructor
        void display() const;//displays all attributes
        //getters
        int getvalue() const;
        int getyear() const;
        bool getdelivery() const;
        double getgascap() const;
        //setters
        void setgascap(double);
        void setyear(int);
        void setvalue(int);
        void setdelivery(bool);
};

#endif // !CAR_Hsh-3.00$ g++ Car.cpp CarDriver.coo  pp
In file included from Car.cpp:2:
Car.h:40:17: warning: no newline at end of file
Car.cpp:118:2: warning: no newline at end of file
In file included from CarDriver.cpp:12:
Car.h:40:17: warning: no newline at end of file
sh-3.00$ a.out
Creating a DEFAULT vehicle
Overloaded constructor works!
Displaying all vehicle attributes:
----------------------------------------
Delivery? (1 = yes, 0 = no) - 0
Year                        - 2007
Value (in USD)              - 9200
Gas Tank Capacity           - 9.2
----------------------------------------
Enter new year: 1961' 
Enter new value: 69269
Enter new gas cap: 16.2
Delivery? (1 = yes, 0 = no): 1
Displaying new set of data:
Displaying all vehicle attributes:
----------------------------------------
Delivery? (1 = yes, 0 = no) - 1
Year                        - 1961
Value (in USD)              - 69269
Gas Tank Capacity           - 16.2
----------------------------------------
Getting data from class. . .
Values match! Successful Operation!
sh-3.00$ sudo victorydance

We trust you have received the usual lecture from the local System
Administrator. It usually boils down to these three things:

    #1) Respect the privacy of others.
    #2) Think before you type.
    #3) With great power comes great responsibility.

Password:
sh-3.00$ exit

script done on Mon Apr 21 22:32:46 2014
