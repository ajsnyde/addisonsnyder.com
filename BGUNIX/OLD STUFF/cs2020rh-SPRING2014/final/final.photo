Script started on Mon May 05 09:42:06 2014
sh-3.00$ pwd
/home/15/ajsnyde/cs2020rh/final
sh-3.00$ ls -l
total 148
-rw-r--r--   1 ajsnyde  ics2020rh    1165 May  5 09:14 Car.cpp
-rw-r--r--   1 ajsnyde  ics2020rh    1297 May  5 09:05 Car.h
-rw-r--r--   1 ajsnyde  ics2020rh    5351 May  5 09:40 FINAL.cpp
-rw-r--r--   1 ajsnyde  user           0 May  5 09:42 FINAL.photo
-rw-r--r--   1 ajsnyde  ics2020rh    5916 May  5 09:40 List.cpp
-rw-r--r--   1 ajsnyde  ics2020rh     404 May  5 09:05 List.h
drwxr-sr-x   5 ajsnyde  ics2020rh     512 May  5 09:13 Old versions
-rwxr-xr-x   1 ajsnyde  ics2020rh   55984 May  5 09:41 a.out
-rw-r--r--   1 ajsnyde  ics2020rh     193 May  5 09:05 lot.txt
sh-3.00$ ls -l[2Ppwdtelnet towel.blinkenlights.nl
sh-3.00$ a.out[Kg++ filedriver.cpp Car.cpp List.cppp  pp[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1@g[1@+[1@+[1@ Car.cpp List.cpp FINAL.cpp
In file included from Car.cpp:2:
Car.h:38:7: warning: no newline at end of file
Car.cpp:44:64: warning: no newline at end of file
In file included from List.h:4,
                 from List.cpp:2:
Car.h:38:7: warning: no newline at end of file
In file included from List.cpp:2:
List.h:23:8: warning: no newline at end of file
In file included from FINAL.cpp:3:
Car.h:38:7: warning: no newline at end of file
In file included from FINAL.cpp:4:
List.h:23:8: warning: no newline at end of file
FINAL.cpp:201:2: warning: no newline at end of file
FINAL.cpp: In function 'void centertext(std::string, int, char, bool, bool)':
FINAL.cpp:157: warning: comparison between signed and unsigned integer expressions
FINAL.cpp:196: warning: statement has no effect
sh-3.00$ cat Car.cpp
#include "iostream"
#include "Car.h"
#include "string"

using namespace std;

///////////////////////////////////////////////////////////////
//      Constructor - Sets values to a default.. (no return, no parameters)
///////////////////////////////////////////////////////////////
Car::Car()
{

}

Car::Car(string tempmake, string tempmodel, string tempcolor, string tempVIN, string temptag, int tempyear, int tempmileage, int tempvalue, bool tempNEW)
{
        make = tempmake;
        model = tempmodel;
        color = tempcolor;
        VIN = tempVIN;
        tag = temptag;
        year = tempyear;
        mileage = tempmileage;
        value = tempvalue;
        NEW = tempNEW;
}

Car::Car(string tempmake, string tempmodel, string tempcolor, string tempVIN, string temptag, int tempyear, int tempmileage, int tempvalue, bool tempNEW, Car *tempnext)
{
        make = tempmake;
        model = tempmodel;
        color = tempcolor;
        VIN = tempVIN;
        tag = temptag;
        year = tempyear;
        mileage = tempmileage;
        value = tempvalue;
        NEW = tempNEW;
        next = tempnext;
}
///////////////////////////////////////////////////////////////
//      Function Name - Display
//      No parameters, void return.
///////////////////////////////////////////////////////////////sh-3.00$ cat Car.h
///////////////////////////////////////////////////////////////

// FILE NAME:           Car.h

// TITLE:                       Car Header File

// PROGRAMMER:          Addison Snyder

// FOR COURSE:          CS 2020

// DUE DATE:            4/21/2014

//

// ALL CODE IS MINE UNLESS OTHERWISE NOTED

///////////////////////////////////////////////////////////////



#ifndef CAR_H

#define CAR_H

#include "string"

using namespace std;



class Car 

{

        friend class List;

private:

        //OFFICIAL ORDER IN WHICH PARAMETERS ARE USED:

        string make;

        string model;

        string color;   //Remain consistent in naming colors. Either use legitimate manufacturer's name (Metallic Tungsten), or stick with basic (Grey).

        string VIN;             //Vehicle Identification Number (not really a number, but a series of numbers and letters)

        string tag;             //Usually 6 char. string, i.e. 4C0023 (0023 designates #, 4C describes type)

        int year;

        int mileage;

        int value;              //MSRP if new, est. market value if used

        bool NEW;               //If car has not been owned domestically, it is new (1). This includes transferred vehicles and dealer sales. Must have original window stickers, etc.



        Car *next;

public:

        Car();

        Car(string, string, string, string, string, int, int, int, bool);

        Car(string, string, string, string, string, int, int, int, bool, Car*);

};



#endifsh-3.00$ cat List.cpp
#include "iostream"
#include "List.h"
#include "fstream"

using namespace std;

List::List(void)
{
        head = NULL;
}

List::List(const List &obj)
{
        Car *IN;
        string tempmake;
        string tempmodel;
        string tempcolor;
        string tempVIN;
        string temptag;
        int tempyear;
        int tempmileage;
        int tempvalue;
        bool tempNEW;
        IN = obj.head;
        tempmake = IN->make;
        tempmodel = IN->model;
        tempcolor = IN->color;
        tempVIN = IN->VIN;
        temptag = IN->tag;
        tempyear = IN->year;
        tempmileage = IN->mileage;
        tempvalue = IN->value;
        tempNEW = IN->NEW;
        head = new Car(tempmake, tempmodel, tempcolor, tempVIN, temptag, tempyear, tempmileage, tempvalue, tempNEW);

        while(IN->next != NULL)
        {
                IN = IN->next;
                tempmake = IN->make;
                tempmodel = IN->model;
                tempcolor = IN->color;
                tempVIN = IN->VIN;
                temptag = IN->tag;
                tempyear = IN->year;
                tempmileage = IN->mileage;
                tempvalue = IN->value;
                tempNEW = IN->NEW;
                head = new Car(tempmake, tempmodel, tempcolor, tempVIN, temptag, tempyear, tempmileage, tempvalue, tempNEW, head);
        }
}

const List List::operator=(const List &right)
{
        Car *car_ptr, *next_car;

        car_ptr = head;
        while(car_ptr != NULL)
        {
                next_car = car_ptr->next;
                delete car_ptr;
                car_ptr = next_car;
        }

        string tempmake;
        string tempmodel;
        string tempcolor;
        string tempVIN;
        string temptag;
        int tempyear;
        int tempmileage;
        int tempvalue;
        bool tempNEW;

        car_ptr = right.head;
        tempmake = car_ptr->make;
        tempmodel = car_ptr->model;
        tempcolor = car_ptr->color;
        tempVIN = car_ptr->VIN;
        temptag = car_ptr->tag;
        tempyear = car_ptr->year;
        tempmileage = car_ptr->mileage;
        tempvalue = car_ptr->value;
        tempNEW = car_ptr->NEW;
        head = new Car(tempmake, tempmodel, tempcolor, tempVIN, temptag, tempyear, tempmileage, tempvalue, tempNEW);

        while(car_ptr->next != NULL)
        {
                car_ptr = car_ptr->next;
                tempmake = car_ptr->make;
                tempmodel = car_ptr->model;
                tempcolor = car_ptr->color;
                tempVIN = car_ptr->VIN;
                temptag = car_ptr->tag;
                tempyear = car_ptr->year;
                tempmileage = car_ptr->mileage;
                tempvalue = car_ptr->value;
                tempNEW = car_ptr->NEW;
                head = new Car(tempmake, tempmodel, tempcolor, tempVIN, temptag, tempyear, tempmileage, tempvalue, tempNEW, head);
        }
        return *this;
}

void List::add(string tempmake, string tempmodel, string tempcolor, string tempVIN, string temptag, int tempyear, int tempmileage, int tempvalue, bool tempNEW)
{
        if(head == NULL)
                head = new Car(tempmake, tempmodel, tempcolor, tempVIN, temptag, tempyear, tempmileage, tempvalue, tempNEW, NULL);
        else
        {
                Car *car_ptr;
                car_ptr = head;
                while(car_ptr->next != NULL)
                        car_ptr = car_ptr->next;
                car_ptr->next = new Car(tempmake, tempmodel, tempcolor, tempVIN, temptag, tempyear, tempmileage, tempvalue, tempNEW, NULL);
        }
}

void List::displaylist()
{
        Car *car_ptr;
        int i = 1;
        string word;
        string number;
        car_ptr = head;
        if(car_ptr == NULL)
        {
                cout << "No cars to be displayed!\n";
                return;
        }
        while(car_ptr != NULL)
        {
                cout << "~~~~~~~~~~~~~~ Car #" << i << " ~~~~~~~~~~~~~~~~~~\n";
                cout << "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n";
                cout << "Make:       " << car_ptr->make << "\n";
                cout << "Model:      " << car_ptr->model << "\n";
                cout << "Year:       " << car_ptr->year << "\n";
                cout << "Color:      " << car_ptr->color << "\n";
                cout << "VIN:        " << car_ptr->VIN << "\n";
                cout << "Dealer Tag: " << car_ptr->tag << "\n";
                cout << "Mileage:    " << car_ptr->mileage << "\n";
                cout << "Value:      $" << car_ptr->value << "\n";
                cout << "Condition:  ";
                if(car_ptr->NEW)
                        cout << "NEW\n";
                else
                        cout << "USED\n";
                car_ptr = car_ptr->next;
                i++;
        }
}


void List::ins(int num, string tempmake, string tempmodel, string tempcolor, string tempVIN, string temptag, int tempyear, int tempmileage, int tempvalue, bool tempNEW) 
{
        Car *car_ptr, *previous_car; 
        int i = 0;
        previous_car = NULL;
        car_ptr = NULL;
        if(head == NULL)
        {
                add(tempmake, tempmodel, tempcolor, tempVIN, temptag, tempyear, tempmileage, tempvalue, tempNEW);
                return;
        }
        else
        {
                previous_car = head;
                car_ptr = head->next;
                while (car_ptr != NULL &&  i != num)
                {
                        previous_car = car_ptr; 
                        car_ptr = car_ptr->next;
                        i++;
                }
        }
        previous_car->next = new Car(tempmake, tempmodel, tempcolor, tempVIN, temptag, tempyear, tempmileage, tempvalue, tempNEW, car_ptr);
}
void List::del(int num) 
{
        Car *car_ptr, *previous_car;
        previous_car = NULL;
        int i = 0;
        if (head == NULL)
        {
                cout << "No cars detected!\n";
                return;
        }

        if (i == num)
        {
                car_ptr = head;
                head = head->next;
                delete car_ptr;
                cout << "Car #" <<  (i + 1) << " was successfully deleted!\n";
        }
        else
        {
                car_ptr = head;
                while (car_ptr != NULL && i != num)
                {
                        previous_car = car_ptr; car_ptr = car_ptr->next;
                        i++;
                }
                if(car_ptr)
                {
                        previous_car->next = car_ptr->next;
                        delete car_ptr;
                        cout << "Car #" <<  (i + 1) << " was successfully deleted!\n";
                }
        }
}

void List::load(List list)
{
        ifstream input;
        string file;
        string tempmake;
        string tempmodel;
        string tempcolor;
        string tempVIN;
        string temptag;
        int tempyear;
        int tempmileage;
        int tempvalue;
        bool tempNEW;
        cout << "Please enter file name: ";
        cin >> file;
                input.open("lot.txt");
        cout << "Loading " << file << ". . .\n";
        while(!input)
        {
                cout << "File not found! Please reenter name (X to abort): ";
                cin >> file;
                input.open("lot.txt");
                if(file == "X")
                        return;
        }
        int i = 1;
        while(!input.eof())
        {
                cout << "Entering car #" << i++ << "\n";
                input >> tempmake;
                input >> tempmodel;
                input >> tempcolor;
                input >> tempVIN;
                input >> temptag;
                input >> tempyear;
                input >> tempmileage;
                input >> tempvalue;
                input >> tempNEW;
                add(tempmake, tempmodel, tempcolor, tempVIN, temptag, tempyear, tempmileage, tempvalue, tempNEW);
        }
}

List::~List()
{
        Car *car_ptr, *next_car;
        car_ptr = head;
        while(car_ptr != NULL)
        {
                next_car = car_ptr->next;
                delete car_ptr;
                car_ptr = next_car;
        }
}

sh-3.00$ cat List.h
#ifndef LIST_H

#define LIST_H



#include "Car.h"



class List

{

private:

        Car *head;



public:

        List();

        List(const List&);

        ~List();

        const List operator=(const List&);

        void add(string, string, string, string, string, int, int, int, bool);

        void ins(int, string, string, string, string, string, int, int, int, bool);

        void del(int);

        void displaylist();

        void load(List);

};



#endif sh-3.00$ cat FINAL.cpp
#include "iostream"
#include "string"
#include "Car.h"
#include "List.h"
#include "cstring"
#include "fstream"
#include "iomanip"

using namespace std;

void display(int);
void givevalues(char, List);
void centertext(string, int, char, bool, bool);

int main()
{
        string choice2;
        string make;
        string model;
        string color;
        string VIN;
        string tag;
        int year;
        int mileage;
        int value;
        bool NEW;
        List Lot;
        char choice = 0;
        int num;
        int w;

        cout << "Please designate width of console (in charcters spaces): ";
        cin >> w;
        while(w < 30)
        {
                cout  << "Width has a minimum of 30. Please reenter: ";
                cin >> w;
        }

        centertext("", w, '~', 1, 0);
        centertext(" Welcome to the Menu! ", w, '~', 1, 0);
        display(w);
        while(toupper(choice) != 'X')
        {
                centertext(" Please input choice:   ", w, '~', 1, 1);
                cin >> choice;
                choice = toupper(choice);
                switch(choice)
                {
                case 'X':
                        centertext("Exiting program!\n\n", w, '~', 1, 0);
                        break;
                case 'A':
                        centertext(" Creating new vehicle! ", w, '~', 1, 0);
                        centertext(" For VIN and Dealer Tag, N/A is suggested. ", w, '~', 1, 0);
                        centertext(" Please enter manufacturer:          ", w, '~', 1, 1);
                        cin >> make;
                        centertext(" Please enter model of car:          ", w, '~', 1, 1);
                        cin >> model;
                        centertext(" Please enter color of car:          ", w, '~', 1, 1);
                        cin >> color;
                        centertext(" Please enter VIN:                   ", w, '~', 1, 1);
                        cin >> VIN;
                        centertext(" Please enter dealer tag:            ", w, '~', 1, 1);
                        cin >> tag;
                        centertext(" Please enter year of car:        ", w, '~', 1, 1);
                        cin >> year;
                        centertext(" Please enter car mileage:        ", w, '~', 1, 1);
                        cin >> mileage;
                        centertext(" Please enter estimated value (MSRP if new):        ", w, '~', 1, 1);
                        cin >> value;
                        cout << "Is the car new? ";
                        cin >> choice2;
                        if(choice2 == "Yes" || choice2 == "YES" || choice2 == "Y" || choice2 == "y" || choice2 == "1")
                                NEW = 1;
                        else
                                NEW = 0;
                        Lot.add(make, model, color, VIN, tag, year, mileage, value, NEW);
                        display(w);
                        break;
                case 'I':
                        centertext(" Inserting new vehicle! ", w, '~', 1, 0);
                        cout << "When entering info for a vehicle, it is perfectly acceptable to input \"N/A\" for VIN or dealer tag.\n";
                        cout << "Please enter manufacturer:           ";
                        cin >> make;
                        cout << "Please enter model of car:           ";
                        cin >> model;
                        cout << "Please enter color of car:           ";
                        cin >> color;
                        cout << "Please enter VIN:                    ";
                        cin >> VIN;
                        cout << "Please enter dealer tag:             ";
                        cin >> tag;
                        cout << "Please enter year of car:        ";
                        cin >> year;
                        cout << "Please enter car mileage:        ";
                        cin >> mileage;
                        cout << "Please enter estimated value (MSRP if new):       ";
                        cin >> value;
                        cout << "Is the car new? ";
                        cin >> choice2;
                        if(choice2 == "Yes" || choice2 == "YES" || choice2 == "Y" || choice2 == "y" || choice2 == "1")
                                NEW = 1;
                        else
                                NEW = 0;
                        cout << "Please enter number for where car is inserted (i.e. 2 will result in new car being after 2nd car): ";
                        cin >> num;
                        Lot.ins((num - 1), make, model, color, VIN, tag, year, mileage, value, NEW);
                        display(w);
                        break;
                case 'F':
                        Lot.ins(0, "Dodge", "Dakota", "Silver", "819234DHS8235", "N/A", 2001, 99458, 1200, 0);
                        Lot.load(Lot);
                        Lot.del(1);
                        display(w);
                        break;
                case 'L':
                        Lot.displaylist();
                        display(w);
                        break;
                case 'D':
                        cout << "Please enter number for where car is deleted (i.e. 1 will result in 1st car being deleted): ";
                        cin >> num;
                        Lot.del(num - 1);
                        display(w);
                        break;
                }
        }

        Lot.add("Dodge", "Dakota", "Silver", "819234DHS8235", "N/A", 2001, 99458, 1200, 0);
        Lot.displaylist();
        Lot.load(Lot);
        Lot.displaylist();
        cin >> choice;
        return 0;
}

void display(int w)
{
        centertext("", w, '~', 1, 0);
        centertext("", w, '~', 1, 0);
        centertext("~  Add Vehicle     = A    ~", w, '~', 1, 0);
        centertext("~  Insert Vehicle  = I    ~", w, '~', 1, 0);
        centertext("~  Edit Vehicle    = E    ~", w, '~', 1, 0);
        centertext("~  Display Lot     = L    ~", w, '~', 1, 0);
        centertext("~  Delete Vehicle  = D    ~", w, '~', 1, 0);
        centertext("~  Load File       = F    ~", w, '~', 1, 0);
        centertext("~  eXit            = X    ~", w, '~', 1, 0);
        centertext("", w, '~', 1, 0);
        centertext("", w, '~', 1, 0);
        centertext("", w, '~', 1, 0);
        centertext("", w, '~', 1, 0);
}

void centertext(string string1, int spaces, char filler, bool right, bool back)
{
        if(string1.size() >= spaces)
        {
                cout << string1 << "\n";
                return;
        }
        char testit = ' ';
        char backspace = 8;
        int spacer = 0;
        int counter = 0;
        int length = string1.size();
        //Warning is a false positive, as no output is possible except 1 or 0...
        bool odd = (spaces - length) % 2; 
        if(odd)
                spaces++;
        else
                cout << filler;
        if((right && odd))
                cout << filler;
        while(counter != (((spaces - length) / 2)) - 1)
        {
                cout << filler;
                counter++;
        }
        cout << string1;
        counter = 0;
        while (counter != (((spaces - length) / 2)) - 1)
        {
                cout << filler;
                counter++;
        }
        if((odd == 1 && right == false) || odd == 0)
                cout << filler;
        if(back)
        {
                while(testit == ' ')
                {
                        testit = string1[(string1.length() - spacer) - 1 ];
                        spacer++;
                }
                for(counter; counter != -spacer + 1; counter--)
                        cout << backspace;
        }
        else
                cout << "\n";
}sh-3.00$ clear
[H[2Jsh-3.00$ a.out
Please designate width of console (in charcters spaces): 79
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Welcome to the Menu! ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~  Add Vehicle     = A    ~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~  Insert Vehicle  = I    ~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~  Edit Vehicle    = E    ~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~  Display Lot     = L    ~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~  Delete Vehicle  = D    ~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~  Load File       = F    ~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~  eXit            = X    ~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Please input choice:   ~~~~~~~~~~~~~~~~~~~~~~~~~~~L
No cars to be displayed!
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~  Add Vehicle     = A    ~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~  Insert Vehicle  = I    ~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~  Edit Vehicle    = E    ~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~  Display Lot     = L    ~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~  Delete Vehicle  = D    ~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~  Load File       = F    ~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~  eXit            = X    ~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Please input choice:   ~~~~~~~~~~~~~~~~~~~~~~~~~~~A
~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Creating new vehicle! ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~ For VIN and Dealer Tag, N/A is suggested. ~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~ Please enter manufacturer:          ~~~~~~~~~~~~~~~~~~~~~GMC  
~~~~~~~~~~~~~~~~~~~~~ Please enter model of car:          ~~~~~~~~~~~~~~~~~~~~~Jimmy
~~~~~~~~~~~~~~~~~~~~~ Please enter color of car:          ~~~~~~~~~~~~~~~~~~~~~Green
~~~~~~~~~~~~~~~~~~~~~ Please enter VIN:                   ~~~~~~~~~~~~~~~~~~~~~91023784224
~~~~~~~~~~~~~~~~~~~~~ Please enter dealer tag:            ~~~~~~~~~~~~~~~~~~~~~N/A
~~~~~~~~~~~~~~~~~~~~~~~ Please enter year of car:        ~~~~~~~~~~~~~~~~~~~~~~ 1997
~~~~~~~~~~~~~~~~~~~~~~~ Please enter car mileage:        ~~~~~~~~~~~~~~~~~~~~~~ 217000
~~~~~~~~~~~~~~ Please enter estimated value (MSRP if new):        ~~~~~~~~~~~~~ 1350
Is the car new? NO
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~  Add Vehicle     = A    ~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~  Insert Vehicle  = I    ~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~  Edit Vehicle    = E    ~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~  Display Lot     = L    ~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~  Delete Vehicle  = D    ~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~  Load File       = F    ~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~  eXit            = X    ~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Please input choice:   ~~~~~~~~~~~~~~~~~~~~~~~~~~~L
~~~~~~~~~~~~~~ Car #1 ~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Make:       GMC
Model:      Jimmy
Year:       1997
Color:      Green
VIN:        91023784224
Dealer Tag: N/A
Mileage:    217000
Value:      $1350
Condition:  USED
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~  Add Vehicle     = A    ~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~  Insert Vehicle  = I    ~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~  Edit Vehicle    = E    ~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~  Display Lot     = L    ~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~  Delete Vehicle  = D    ~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~  Load File       = F    ~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~  eXit            = X    ~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Please input choice:   ~~~~~~~~~~~~~~~~~~~~~~~~~~~F
Please enter file name: lot.txt
Loading lot.txt. . .
Entering car #1
Entering car #2
Entering car #3
Car #2 was successfully deleted!
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~  Add Vehicle     = A    ~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~  Insert Vehicle  = I    ~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~  Edit Vehicle    = E    ~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~  Display Lot     = L    ~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~  Delete Vehicle  = D    ~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~  Load File       = F    ~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~  eXit            = X    ~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Please input choice:   ~~~~~~~~~~~~~~~~~~~~~~~~~~~L
~~~~~~~~~~~~~~ Car #1 ~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Make:       GMC
Model:      Jimmy
Year:       1997
Color:      Green
VIN:        91023784224
Dealer Tag: N/A
Mileage:    217000
Value:      $1350
Condition:  USED
~~~~~~~~~~~~~~ Car #2 ~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Make:       Toyota
Model:      Prius
Year:       2006
Color:      Red
VIN:        182673HU38822
Dealer Tag: N/A
Mileage:    113000
Value:      $6725
Condition:  USED
~~~~~~~~~~~~~~ Car #3 ~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Make:       Ford
Model:      F150
Year:       2014
Color:      Maroon
VIN:        723872UE72261
Dealer Tag: 4C0052
Mileage:    29
Value:      $43720
Condition:  NEW
~~~~~~~~~~~~~~ Car #4 ~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Make:       Ferrari
Model:      LaFerrari
Year:       2014
Color:      Red
VIN:        28123JJ278372
Dealer Tag: 2C0053
Mileage:    2
Value:      $1400000
Condition:  NEW
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~  Add Vehicle     = A    ~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~  Insert Vehicle  = I    ~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~  Edit Vehicle    = E    ~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~  Display Lot     = L    ~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~  Delete Vehicle  = D    ~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~  Load File       = F    ~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~  eXit            = X    ~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Please input choice:   ~~~~~~~~~~~~~~~~~~~~~~~~~~~D
Please enter number for where car is deleted (i.e. 1 will result in 1st car being deleted): 4
Car #4 was successfully deleted!
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~  Add Vehicle     = A    ~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~  Insert Vehicle  = I    ~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~  Edit Vehicle    = E    ~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~  Display Lot     = L    ~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~  Delete Vehicle  = D    ~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~  Load File       = F    ~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~  eXit            = X    ~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Please input choice:   ~~~~~~~~~~~~~~~~~~~~~~~~~~~L
~~~~~~~~~~~~~~ Car #1 ~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Make:       GMC
Model:      Jimmy
Year:       1997
Color:      Green
VIN:        91023784224
Dealer Tag: N/A
Mileage:    217000
Value:      $1350
Condition:  USED
~~~~~~~~~~~~~~ Car #2 ~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Make:       Toyota
Model:      Prius
Year:       2006
Color:      Red
VIN:        182673HU38822
Dealer Tag: N/A
Mileage:    113000
Value:      $6725
Condition:  USED
~~~~~~~~~~~~~~ Car #3 ~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Make:       Ford
Model:      F150
Year:       2014
Color:      Maroon
VIN:        723872UE72261
Dealer Tag: 4C0052
Mileage:    29
Value:      $43720
Condition:  NEW
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~  Add Vehicle     = A    ~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~  Insert Vehicle  = I    ~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~  Edit Vehicle    = E    ~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~  Display Lot     = L    ~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~  Delete Vehicle  = D    ~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~  Load File       = F    ~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~  eXit            = X    ~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Please input choice:   ~~~~~~~~~~~~~~~~~~~~~~~~~~~I
~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Inserting new vehicle! ~~~~~~~~~~~~~~~~~~~~~~~~~~~
When entering info for a vehicle, it is perfectly acceptable to input "N/A" for VIN or dealer tag.
Please enter manufacturer:           GMD^HC    C
Please enter model of car:           Suburban
Please enter color of car:           Blue
Please enter VIN:                    N/A
Please enter dealer tag:             N/A
Please enter year of car:        2000
Please enter car mileage:        185000
Please enter estimated value (MSRP if new):       5700
Is the car new? nope
Please enter number for where car is inserted (i.e. 2 will result in new car being after 2nd car): 1
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~  Add Vehicle     = A    ~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~  Insert Vehicle  = I    ~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~  Edit Vehicle    = E    ~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~  Display Lot     = L    ~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~  Delete Vehicle  = D    ~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~  Load File       = F    ~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~  eXit            = X    ~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Please input choice:   ~~~~~~~~~~~~~~~~~~~~~~~~~~~L
~~~~~~~~~~~~~~ Car #1 ~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Make:       GMC
Model:      Jimmy
Year:       1997
Color:      Green
VIN:        91023784224
Dealer Tag: N/A
Mileage:    217000
Value:      $1350
Condition:  USED
~~~~~~~~~~~~~~ Car #2 ~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Make:       GMC
Model:      Suburban
Year:       2000
Color:      Blue
VIN:        N/A
Dealer Tag: N/A
Mileage:    185000
Value:      $5700
Condition:  USED
~~~~~~~~~~~~~~ Car #3 ~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Make:       Toyota
Model:      Prius
Year:       2006
Color:      Red
VIN:        182673HU38822
Dealer Tag: N/A
Mileage:    113000
Value:      $6725
Condition:  USED
~~~~~~~~~~~~~~ Car #4 ~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Make:       Ford
Model:      F150
Year:       2014
Color:      Maroon
VIN:        723872UE72261
Dealer Tag: 4C0052
Mileage:    29
Value:      $43720
Condition:  NEW
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~  Add Vehicle     = A    ~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~  Insert Vehicle  = I    ~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~  Edit Vehicle    = E    ~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~  Display Lot     = L    ~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~  Delete Vehicle  = D    ~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~  Load File       = F    ~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~  eXit            = X    ~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Please input choice:   ~~~~~~~~~~~~~~~~~~~~~~~~~~~X
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~Exiting program!
sh-3.00$ clear
[H[2Jsh-3.00$ exit

script done on Mon May 05 09:47:47 2014
